import yfinance as yf
import pandas as pd
import os
from datetime import datetime

def load_or_download_data(ticker, start_date="2015-01-01", end_date="2024-01-01"):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç —Å Yahoo Finance, –¥–æ–ø–∏—Å—ã–≤–∞—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã.
    """
    file_path = f"data/{ticker}.csv"
    need_download = True  # –§–ª–∞–≥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –¥–∏—Å–∫–µ
    if os.path.exists(file_path):
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª {file_path}, –∑–∞–≥—Ä—É–∂–∞–µ–º...")
        data = pd.read_csv(file_path, index_col="Date", parse_dates=True)

        # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –ª–∏ —Ñ–∞–π–ª –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –¥–∞—Ç—ã
        file_start = data.index.min().strftime("%Y-%m-%d")
        file_end = data.index.max().strftime("%Y-%m-%d")

        if file_start <= start_date and file_end >= end_date:
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–∫—Ä—ã–≤–∞—é—Ç –¥–∏–∞–ø–∞–∑–æ–Ω {start_date} - {end_date}.")
            need_download = False
        else:
            print(f"üîÑ –î–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ —Å {file_start} –ø–æ {file_end}, –¥–æ–ø–æ–ª–Ω—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã...")
            need_download = True  # –ù—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ

    if need_download:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker} ({start_date} - {end_date})...")
        new_data = yf.download(ticker, start=start_date, end=end_date)

        if os.path.exists(file_path):
            # üìå –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            data = pd.concat([data, new_data]).sort_index().drop_duplicates()
        else:
            data = new_data

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        data.to_csv(file_path)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {file_path}")

    return data, file_path
